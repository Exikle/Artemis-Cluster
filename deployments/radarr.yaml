apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: default
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: radarr
    spec:
      # nodeName: pkn001l
      containers:
      - name: radarr
        image: hotio/radarr
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7878
        resources:
            limits:
              cpu: "2"
            requests:
              cpu: "500m"
        env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: "America/Toronto"
        volumeMounts:
        - mountPath: /movies
          name: artemisfs
          subPath: media/movies
        - mountPath: /seeding
          name: artemisfs
          subPath: seeding
        - mountPath: /downloads
          name: artemisfs
          subPath: downloads
        - mountPath: /config
          name: config
        - mountPath: /etc/localtime
          name: localtime
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config
      - name: artemisfs
        persistentVolumeClaim:
          claimName: afs-pvc
      - name: localtime
        hostPath:
          path: /etc/localtime
---
apiVersion: v1
kind: Service
metadata:
  name: radarr-svc
  labels:
    app: radarr-svc
spec:
  type: LoadBalancer
  ports:
  - port: 7878
    protocol: TCP
  selector:
    app: radarr

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-prod
  name: radarr-ing
spec:
  rules:
  - host: radarr.dcunhalab.com
    http:
      paths:
      - backend:
          serviceName: radarr-svc
          servicePort: 7878
