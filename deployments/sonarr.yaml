apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: default
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: linuxserver/sonarr:preview
        imagePullPolicy: Always
        ports:
        - containerPort: 8989
        env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: "America/Toronto"
        volumeMounts:
        - mountPath: /anime
          name: artemisfs
          subPath: media/anime
        - mountPath: /tv
          name: artemisfs
          subPath: media/tv
        - mountPath: /seeding
          name: artemisfs
          subPath: seeding
        - mountPath: /downloads
          name: artemisfs
          subPath: downloads
        - mountPath: /config
          name: appdata
          subPath: sonarr
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /dev/rtc
          name: rtc
      volumes:
      - name: appdata
        persistentVolumeClaim:
          claimName: appdata-pvc
      - name: artemisfs
        persistentVolumeClaim:
          claimName: afs-pvc
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: rtc
        hostPath:
          path: /dev/rtc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-svc
  labels:
    app: sonarr-svc
spec:
  type: ClusterIP
  ports:
  - port: 8989
    protocol: TCP
  selector:
    app: sonarr

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-prod
  name: sonarr-ing
spec:
  rules:
  - host: sonarr.dcunhahome.com
    http:
      paths:
      - backend:
          serviceName: sonarr-svc
          servicePort: 8989
