apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: default
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: linuxserver/sonarr:preview
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8989
        env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: "America/Toronto"
        volumeMounts:
        - mountPath: /mnt
          name: artemisfs
        - mountPath: /config
          name: config
        - mountPath: /etc/localtime
          name: localtime
      volumes:
      - name: artemisfs
        persistentVolumeClaim:
          claimName: rook-cephfs-pvc
      - name: config
        hostPath: 
          path: /mnt/appdata/sonarr/config
      - name: localtime
        hostPath: 
          path: /etc/localtime
---
kind: Service
apiVersion: v1
metadata:
  name: sonarr-svc
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8989
    targetPort: 8989
  selector:
    app: sonarr
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: argo-tunnel
  labels:
    ingress: argo-tunnel
  name: sonarr-ingress
spec:
  tls:
  - hosts:
    - sonarr.dcunhahome.com
    secretName: dcunhahome.com
  rules:
  - host: sonarr.mydomain.com
    http:
      paths:
      - backend:
          serviceName: sonarr
          servicePort: 8989