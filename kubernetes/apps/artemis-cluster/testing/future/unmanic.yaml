apiVersion: apps/v1
kind: Deployment
metadata:
  name: unmanic
  namespace: default
  labels:
    app: unmanic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: unmanic
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: unmanic
    spec:
      containers:
        - name: unmanic
          image: linuxserver/unmanic
          imagePullPolicy: Always
          ports:
            - containerPort: 3579
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "America/Toronto"
          volumeMounts:
            - mountPath: /library
              name: artemisfs
              subPath: media
            - mountPath: /config
              name: appdata
              subPath: unmanic
            - mountPath: /etc/localtime
              name: localtime
            - mountPath: /tmp/unmanic
              name: transcode
      volumes:
        - name: artemisfs
          persistentVolumeClaim:
            claimName: afs-pvc
        - name: appdata
          persistentVolumeClaim:
            claimName: appdata-pvc
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: transcode
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: unmanic-svc
  labels:
    app: unmanic-svc
spec:
  type: ClusterIP
  ports:
    - port: 3579
      protocol: TCP
  selector:
    app: unmanic
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx-prod
#   name: unmanic-ing
# spec:
#   rules:
#   - host: unmanic.dcunhahome.com
#     http:
#       paths:
#       - backend:
#           serviceName: unmanic-svc
#           servicePort: 3579
