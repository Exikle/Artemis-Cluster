# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: xfs-iscsi
      namespace: democratic-csi
    - name: truenas-atlas
      namespace: artemis-cluster
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.2@sha256:8e70a877c77805dfe93ce30a8da3362fbddf221ef806951d4e4634bb80dc87b5
            env:
              TZ: America/Toronto
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.artemis-cluster,
                sabnzbd.artemis-cluster.svc,
                sabnzbd.artemis-cluster.svc.cluster,
                sabnzbd.artemis-cluster.svc.cluster.local,
                sabnzbd.dcunha.io
              # PGID: 1000
              # PUID: 1000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        enabled: true
        type: LoadBalancer
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: false
        className: traefik-external
        # annotations:
        #   traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: &host "{{ .Release.Name }}.dcunha.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "dcunha-io-tls"
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      media:
        type: persistentVolumeClaim
        existingClaim: truenas-atlas
        globalMounts:
          - path: /media
#  volumeMounts:
#         - mountPath: /media/tv
#           name: atlas
#           subPath: tv
#         - mountPath: /media/anime
#           name: atlas
#           subPath: anime
#         - mountPath: /media/movies
#           name: atlas
#           subPath: movies
#         - mountPath: /media/downloads
#           name: atlas
#           subPath: downloads
#         - mountPath: /etc/localtime
#           name: localtime
#         - mountPath: /config
#           name: xfs-iscsi
