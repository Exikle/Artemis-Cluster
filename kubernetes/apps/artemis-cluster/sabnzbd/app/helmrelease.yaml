# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: xfs-iscsi
      namespace: democratic-csi
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: lscr.io/linuxserver/sabnzbd
              tag: 4.3.3
            env:
              TZ: America/Toronto
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.artemis-cluster,
                sabnzbd.artemis-cluster.svc,
                sabnzbd.artemis-cluster.svc.cluster,
                sabnzbd.artemis-cluster.svc.cluster.local,
                sab.dcunha.io
              # PGID: 1000
              # PUID: 1000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8Gi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        enabled: true
        type: LoadBalancer
        controller: *app
        ports:
          http:
            port: *port
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      media:
        type: persistentVolumeClaim
        existingClaim: truenas-atlas
        globalMounts:
          - path: /media
#  volumeMounts:
#         - mountPath: /media/tv
#           name: atlas
#           subPath: tv
#         - mountPath: /media/anime
#           name: atlas
#           subPath: anime
#         - mountPath: /media/movies
#           name: atlas
#           subPath: movies
#         - mountPath: /media/downloads
#           name: atlas
#           subPath: downloads
#         - mountPath: /etc/localtime
#           name: localtime
#         - mountPath: /config
#           name: xfs-iscsi
