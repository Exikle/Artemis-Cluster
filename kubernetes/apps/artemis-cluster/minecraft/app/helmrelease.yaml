# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pterodactyl
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: xfs-iscsi
      namespace: democratic-csi
    - name: cloudnative-pg
      namespace: database
  values:
    controllers:
      pterodactyl:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/pterodactyl/panel
              tag: v1.11.7@sha256:0a0b94df1e00de30bd3365de5dcc732c0e28c72a6a25d4a8da4560cc83dadbbb
            # env:
            #   TZ: ${TZ}
            #   APP_TIMEZONE: ${APP_TIMEZONE}
            #   LE_EMAIL: ${LE_EMAIL}
            #   DB_HOST: ${DB_HOST}
            #   DB_PORT: ${DB_PORT}
            #   DB_DATABASE: ${DB_DATABASE}
            #   DB_USERNAME: ${DB_USERNAME}
            #   DB_PASSWORD: ${DB_PASSWORD}
            envFrom:
              - secretRef:
                  name: minecraft
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /ping
            #         port: ${ACCESS_PORT}
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 300M
              limits:
                memory: 500M
    service:
      app:
        enabled: true
        type: LoadBalancer
        controller: *app
        ports:
          http:
            port: 80
    persistence:
      # config:
      #   existingClaim: *app
      data:
        existingClaim: truenas-atlas
        globalMounts:
          - path: /media
