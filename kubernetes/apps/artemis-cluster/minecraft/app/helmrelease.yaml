# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minecraft
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # dependsOn:
  #   - name: xfs-iscsi
  #     namespace: democratic-csi
  values:
    controllers:
      minecraft:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: itzg/minecraft-server
              tag: 2024.7.0-java8-graalvm-ce
            resources:
              limits:
                memory: 4000Mi
              requests:
                cpu: 1000m
                memory: 2000Mi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities:
                add: ["NET_RAW"]
                drop: ["ALL"]
            env:
              MEMORY: &memory 8G
              INIT_MEMORY: *memory
              MAX_MEMORY: *memory
              TZ: ${CLUSTER_TIME_ZONE}
              ENABLE_ROLLING_LOGS: true
              TYPE: FORGE
              EULA: true
              VERSION: "1.16.5"
              MOTD: "Roguelike Adventures and Dungeons 2"
              DIFFICULTY: hard
              SPAWN_PROTECTION: false
              VIEW_DISTANCE: 16
              MODE: survival
              SERVER_NAME: "Artemis Cluster - MC"
              GUI: false
            envFrom:
              - secretRef:
                  name: minecraft
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  periodSeconds: 180
                  exec: &probeexec { command: ["mc-health"] }
              readiness: *probe
              startup:
                <<: *probe
                spec:
                  initialDelaySeconds: 120
                  periodSeconds: 1
                  failureThreshold: 600
                  exec: *probeexec
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: Always
    service:
      app:
        enabled: true
        type: LoadBalancer
        controller: *app
        ports:
          mc-tcp:
            port: ${ACCESS_PORT}
      rcon:
        enabled: true
        nameOverride: minecraft-rcon
        type: LoadBalancer
        controller: *app
        ports:
          minecraft-rcon:
            port: 25575
    persistence:
      data:
        type: nfs
        server: 10.10.99.100
        path: "/mnt/atlas/media/minecraft"
        globalMounts:
          - path: /data
            readOnly: false
      tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp
