# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: xfs-iscsi
      namespace: democratic-csi
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
        #   init-db:
        #     image:
        #       repository: ghcr.io/onedr0p/postgres-init
        #       tag: 16
        #     envFrom: &envFrom
        #       - secretRef:
        #           name: sonarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.7@sha256:63d9d99f3c1965cfba64f1537f53bd5daecf710a0c281559f3ac48e3de11b782
            env:
              SONARR__APP__INSTANCENAME: ${APP}
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: ${ACCESS_PORT}
              # SONARR__UPDATE__BRANCH: develop
              TZ: America/Toronto
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: ${ACCESS_PORT}
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        enabled: true
        type: LoadBalancer
        controller: *app
        ports:
          http:
            port: ${ACCESS_PORT}
    persistence:
      config:
        existingClaim: *app
      media:
        existingClaim: truenas-atlas
        globalMounts:
          - path: /media
