---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: observability
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 69.3.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: prometheus-operator-crds
      namespace: observability
    - name: xfs-iscsi
      namespace: democratic-csi
  values:
    nameOverride: prometheus
    # fullnameOverride: prometheus
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    # grafana
    grafana:
      enabled: false
    # alertmanager
    alertmanager:
      enabled: true
      alertmanagerSpec:
        retention: 24h
        storage:
          volumeClaimTemplate:
            metadata:
              name: alert
            spec:
              storageClassName: xfs-iscsi
              resources:
                requests:
                  storage: 1Gi
    # prometheus
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        scrapeInterval: 1m # <- match to Grafana helm chart ??
        retention: 2d
        retentionsize: 18Gi
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: kps
            spec:
              storageClassName: xfs-iscsi
              resources:
                requests:
                  storage: 20Gi
    # kubelet
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    # kubeApiServer
    kubeApiServer:
      enabled: true
    # coreDNS
    coreDns:
      enabled: true
    # kubeControllerManager
    kubeControllerManager:
      enabled: true
      endpoints: &controlplane
        - 10.10.99.101
        - 10.10.99.102
        - 10.10.99.103
    # kubeEtcd
    kubeEtcd:
      enabled: true
      endpoints: *controlplane
    # kubeScheduler
    kubeScheduler:
      enabled: true
      endpoints: *controlplane
    # kubeProxy
    kubeProxy:
      enabled: false
    # kubeStateMatrics
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    # nodeExpoter
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
