# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: artemis-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
      #   dependsOn:
    # - name: appdata-iscsi
    #   namespace: democratic-csi
    # - name: atlas-pvc
    #   namespace: artemis-cluster
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: lscr.io/linuxserver/sonarr
              tag: 4.0.4
            env:
              SONARR__PORT: &port 8989
              SONARR__THEME: dark
              PGID: 1000
              PUID: 1000
              TZ: America/Toronto
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    service:
      app:
        nameOverride: sonarr-svc
        controller: sonarr
        ports:
          http:
            port: *port
            protocol: TCP
    ingress:
      main:
        enabled: true
        className: traefik-external
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "default-headers"
        hosts:
          - host: &host "{{ .Release.Name }}.dcunha.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "dcunha-io-tls"
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: sonarr-pvc
        globalMounts:
          - path: /config
      media:
        type: persistentVolumeClaim
        existingClaim: atlas-pvc
        globalMounts:
          - path: /media

    #   appdata:
    #         # type: persistentVolumeClaim
    #         existingClaim: sonarr-pvc
    #         path: /config
    #   atlas:
    #         # type: persistentVolumeClaim
    #         existingClaim: atlas-pvc
    #         path: /atlas/media
    #         globalMounts:
    #             - path: /media
    #               readOnly: true
    # #   localtime:
    # #         path: /etc/localtime
    # #   rtc:
    # #         enabled: true
    # #         type: persistentVolumeClaim
    # #         existingClaim: atlas-pvc
