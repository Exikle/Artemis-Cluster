---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  bootstrap:
    desc: bootstrap Artemis Cluster from scratch
    cmds:
      - task: bootstrap-talosctl
      - task: bootstrap-cluster
      - task: bootstrap-endpoints
      - task: bootstrap-startcluster
      - task: helm:bootstrap
      - task: bootstrap-applyhelm

  bootstrap-talosctl:
    desc: Install/Upgrade Talosctl
    cmd: brew install siderolabs/tap/talosctl

  bootstrap-cluster:
    desc: Apply Config to Talos nodes
    vars:
      INDEX: [0, 1, 2]
    cmds:
      - for: { var: INDEX }
        cmd: |
          sops --decrypt --age $(grep -oP "public key: \K(.*)" $SOPS_AGE_KEY_FILE) \
          --encrypted-regex '^(token|crt|key|id|secret|secretboxEncryptionSecret|ca)$' \
          {{.TALOSCONFIG_DIR}}/assets/{{index .CONTROLPLANES .ITEM }}.secret.sops.yaml | \
          envsubst | \
          talosctl apply-config -n {{index .CONTROLPLANE_IPS .ITEM }} --file /dev/stdin --insecure

  bootstrap-endpoints:
    desc: Apply endpoints to Talos config
    cmd: talosctl --talosconfig=talosconfig config endpoint {{slice .CONTROLPLANE_IPS}}

  bootstrap-mergeconfig:
    desc: Merge config into the default config stored at ~/.talos/config
    cmd: talosctl config merge talosconfig

  bootstrap-startcluster:
    desc: Bootstrap Kubernetes onto the uninitiated Talos cluster
    cmd: talosctl bootstrap -n {{index .CONTROLPLANES 0 }}

  bootstrap-applyhelm:
    desc: Install basic Helm pods for Cilium, CoreDNS & CSR approver
    cmd: helmfile apply {{.TALOSAPPS_DIR}}
